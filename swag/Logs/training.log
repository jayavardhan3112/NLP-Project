Training arguments Namespace(adam_epsilon=1e-08, distributed_backend=None, early_stop_callback=False, fp_16=False, max_grad_norm=1.0, n_gpu=-1, num_workers=8, opt_level='O1', warmup_steps=0, weight_decay=0.0)
--------------------
Model arguments Namespace(hidden_dropout_prob=0.15, max_input_seq_length=128, model_name_or_path='bert-base-uncased')
--------------------
Other arguments Namespace(DEV_FILE='sst2_dev.csv', TRAIN_FILE='sst2_train.csv', do_fast_dev_run=False, eval_batch_size=16, gradient_accumulation_steps=1, learning_rate=5e-05, limit_train_batches=-1, limit_val_batches=-1, max_train_samples=-1, num_train_epochs=5, output_dir='./', predictions_file='predictions.csv', save_last=False, save_top_k=-1, seed=42, train_batch_size=16, write_dev_predictions=True)
--------------------
Global seed set to 42
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertForMultipleChoice: ['cls.predictions.decoder.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.seq_relationship.weight']
- This IS expected if you are initializing BertForMultipleChoice from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForMultipleChoice from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BertForMultipleChoice were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.weight', 'classifier.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
GPU available: True, used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name  | Type                  | Params
------------------------------------------------
0 | model | BertForMultipleChoice | 109 M 
------------------------------------------------
109 M     Trainable params
0         Non-trainable params
109 M     Total params
437.932   Total estimated model params size (MB)
/usr/local/lib/python3.7/dist-packages/pytorch_lightning/callbacks/model_checkpoint.py:623: UserWarning: Checkpoint directory /content/sample_data exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
Validation sanity check: 0it [00:00, ?it/s]/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:481: UserWarning: This DataLoader will create 8 worker processes in total. Our suggested max number of worker in current system is 2, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  cpuset_checked))
Validation sanity check:   0% 0/2 [00:00<?, ?it/s]--------------------
Validation avg_loss:  tensor(1.3791, device='cuda:0')
Validation avg_acc:  tensor(0.4062, device='cuda:0')
Writing predictions for sst2_dev.csv to ./epoch_0_predictions.csv
--------------------
Global seed set to 42
Epoch 0:  64% 80/125 [03:07<01:45,  2.34s/it, loss=1.28, v_num=8, train_loss_step=1.220, train_acc_step=0.438]
Validating: 0it [00:00, ?it/s]
Epoch 0:  64% 80/125 [03:26<01:56,  2.59s/it, loss=1.28, v_num=8, train_loss_step=1.220, train_acc_step=0.438]
Epoch 0:  80% 100/125 [03:30<00:52,  2.11s/it, loss=1.28, v_num=8, train_loss_step=1.220, train_acc_step=0.438]
Epoch 0:  96% 120/125 [03:54<00:09,  1.95s/it, loss=1.28, v_num=8, train_loss_step=1.220, train_acc_step=0.438]
Epoch 0: 100% 125/125 [04:17<00:00,  2.06s/it, loss=1.28, v_num=8, train_loss_step=1.220, train_acc_step=0.438]
Validating: 100% 63/63 [01:13<00:00,  1.15s/it]--------------------
Validation avg_loss:  tensor(1.1567, device='cuda:0')
Validation avg_acc:  tensor(0.5466, device='cuda:0')
Writing predictions for sst2_dev.csv to ./epoch_0_predictions.csv
--------------------
Epoch 0: 100% 125/125 [04:20<00:00,  2.08s/it, loss=1.27, v_num=8, train_loss_step=1.180, train_acc_step=0.500]
                                               --------------------
Train avg_loss:  tensor(1.3132, device='cuda:0')
Train avg_acc:  tensor(0.3770, device='cuda:0')
--------------------
tcmalloc: large alloc 1092804608 bytes == 0x555fd584c000 @  0x7f8e6c8e1615 0x555efd20a4cc 0x555efd2ea47a 0x555efd210f0c 0x7f8e67b339e4 0x7f8e67b3bb14 0x7f8e67b10a60 0x7f8dbf2eef55 0x7f8dbf2ea88e 0x7f8dbf2f2235 0x7f8e67b10fae 0x7f8e67287aa8 0x555efd20e098 0x555efd2814d9 0x555efd27bced 0x555efd20ebda 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd280d00 0x555efd20eafa 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd20eafa 0x555efd27cc0d 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd27b9ee
tcmalloc: large alloc 1366007808 bytes == 0x55601f134000 @  0x7f8e6c8e1615 0x555efd20a4cc 0x555efd2ea47a 0x555efd210f0c 0x7f8e67b339e4 0x7f8e67b3bb14 0x7f8e67b10a60 0x7f8dbf2eef55 0x7f8dbf2ea88e 0x7f8dbf2f2235 0x7f8e67b10fae 0x7f8e67287aa8 0x555efd20e098 0x555efd2814d9 0x555efd27bced 0x555efd20ebda 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd280d00 0x555efd20eafa 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd20eafa 0x555efd27cc0d 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd27b9ee
tcmalloc: large alloc 1707515904 bytes == 0x555fa168e000 @  0x7f8e6c8e1615 0x555efd20a4cc 0x555efd2ea47a 0x555efd210f0c 0x7f8e67b339e4 0x7f8e67b3bb14 0x7f8e67b10a60 0x7f8dbf2eef55 0x7f8dbf2ea88e 0x7f8dbf2f2235 0x7f8e67b10fae 0x7f8e67287aa8 0x555efd20e098 0x555efd2814d9 0x555efd27bced 0x555efd20ebda 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd280d00 0x555efd20eafa 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd20eafa 0x555efd27cc0d 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd27b9ee
Epoch 1:  64% 80/125 [03:08<01:45,  2.36s/it, loss=0.798, v_num=8, train_loss_step=0.979, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
Validating: 0it [00:00, ?it/s]
Epoch 1:  64% 80/125 [03:26<01:56,  2.59s/it, loss=0.798, v_num=8, train_loss_step=0.979, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
Epoch 1:  80% 100/125 [03:32<00:53,  2.12s/it, loss=0.798, v_num=8, train_loss_step=0.979, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
Epoch 1:  96% 120/125 [03:55<00:09,  1.96s/it, loss=0.798, v_num=8, train_loss_step=0.979, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
Epoch 1: 100% 125/125 [04:18<00:00,  2.07s/it, loss=0.798, v_num=8, train_loss_step=0.979, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
Validating: 100% 63/63 [01:13<00:00,  1.16s/it]--------------------
Validation avg_loss:  tensor(0.9677, device='cuda:0')
Validation avg_acc:  tensor(0.6181, device='cuda:0')
Writing predictions for sst2_dev.csv to ./epoch_1_predictions.csv
--------------------
Epoch 1: 100% 125/125 [04:21<00:00,  2.10s/it, loss=0.783, v_num=8, train_loss_step=0.745, train_acc_step=0.688, train_loss_epoch=1.310, train_acc_epoch=0.377]
                                               --------------------
Train avg_loss:  tensor(0.9043, device='cuda:0')
Train avg_acc:  tensor(0.6472, device='cuda:0')
--------------------
tcmalloc: large alloc 1707515904 bytes == 0x555fa168e000 @  0x7f8e6c8e1615 0x555efd20a4cc 0x555efd2ea47a 0x555efd210f0c 0x7f8e67b339e4 0x7f8e67b3bb14 0x7f8e67b10a60 0x7f8dbf2eef55 0x7f8dbf2ea88e 0x7f8dbf2f2235 0x7f8e67b10fae 0x7f8e67287aa8 0x555efd20e098 0x555efd2814d9 0x555efd27bced 0x555efd20ebda 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd280d00 0x555efd20eafa 0x555efd27c915 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd20eafa 0x555efd27cc0d 0x555efd27b9ee 0x555efd20ebda 0x555efd27cc0d 0x555efd27b9ee
Epoch 2:  64% 80/125 [03:07<01:45,  2.35s/it, loss=0.379, v_num=8, train_loss_step=0.745, train_acc_step=0.812, train_loss_epoch=0.904, train_acc_epoch=0.647]
Validating: 0it [00:00, ?it/s]
Epoch 2:  64% 80/125 [03:26<01:55,  2.58s/it, loss=0.379, v_num=8, train_loss_step=0.745, train_acc_step=0.812, train_loss_epoch=0.904, train_acc_epoch=0.647]
Epoch 2:  80% 100/125 [03:31<00:52,  2.12s/it, loss=0.379, v_num=8, train_loss_step=0.745, train_acc_step=0.812, train_loss_epoch=0.904, train_acc_epoch=0.647]
Epoch 2:  96% 120/125 [03:54<00:09,  1.96s/it, loss=0.379, v_num=8, train_loss_step=0.745, train_acc_step=0.812, train_loss_epoch=0.904, train_acc_epoch=0.647]
Epoch 2: 100% 125/125 [04:17<00:00,  2.06s/it, loss=0.379, v_num=8, train_loss_step=0.745, train_acc_step=0.812, train_loss_epoch=0.904, train_acc_epoch=0.647]
Validating: 100% 63/63 [01:13<00:00,  1.16s/it]--------------------
Validation avg_loss:  tensor(1.0692, device='cuda:0')
Validation avg_acc:  tensor(0.6240, device='cuda:0')
Writing predictions for sst2_dev.csv to ./epoch_2_predictions.csv
--------------------
Epoch 2: 100% 125/125 [04:20<00:00,  2.09s/it, loss=0.379, v_num=8, train_loss_step=0.488, train_acc_step=0.750, train_loss_epoch=0.904, train_acc_epoch=0.647]
                                               --------------------
Train avg_loss:  tensor(0.4009, device='cuda:0')
Train avg_acc:  tensor(0.8649, device='cuda:0')
--------------------
Epoch 3:  64% 80/125 [03:08<01:45,  2.35s/it, loss=0.211, v_num=8, train_loss_step=0.221, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
Validating: 0it [00:00, ?it/s]
Epoch 3:  64% 80/125 [03:26<01:56,  2.58s/it, loss=0.211, v_num=8, train_loss_step=0.221, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
Epoch 3:  80% 100/125 [03:32<00:53,  2.12s/it, loss=0.211, v_num=8, train_loss_step=0.221, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
Epoch 3:  96% 120/125 [03:55<00:09,  1.96s/it, loss=0.211, v_num=8, train_loss_step=0.221, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
Epoch 3: 100% 125/125 [04:18<00:00,  2.07s/it, loss=0.211, v_num=8, train_loss_step=0.221, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
Validating: 100% 63/63 [01:13<00:00,  1.16s/it]--------------------
Validation avg_loss:  tensor(1.1654, device='cuda:0')
Validation avg_acc:  tensor(0.6310, device='cuda:0')
Writing predictions for sst2_dev.csv to ./epoch_3_predictions.csv
--------------------
Epoch 3: 100% 125/125 [04:21<00:00,  2.09s/it, loss=0.206, v_num=8, train_loss_step=0.0935, train_acc_step=0.938, train_loss_epoch=0.401, train_acc_epoch=0.865]
                                               --------------------
Train avg_loss:  tensor(0.1857, device='cuda:0')
Train avg_acc:  tensor(0.9405, device='cuda:0')
--------------------
Epoch 4:  64% 80/125 [03:07<01:45,  2.34s/it, loss=0.083, v_num=8, train_loss_step=0.0846, train_acc_step=1.000, train_loss_epoch=0.186, train_acc_epoch=0.941]
Validating: 0it [00:00, ?it/s]
Epoch 4:  64% 80/125 [03:26<01:56,  2.58s/it, loss=0.083, v_num=8, train_loss_step=0.0846, train_acc_step=1.000, train_loss_epoch=0.186, train_acc_epoch=0.941]
Epoch 4:  80% 100/125 [03:31<00:52,  2.12s/it, loss=0.083, v_num=8, train_loss_step=0.0846, train_acc_step=1.000, train_loss_epoch=0.186, train_acc_epoch=0.941]
Epoch 4:  96% 120/125 [03:54<00:09,  1.96s/it, loss=0.083, v_num=8, train_loss_step=0.0846, train_acc_step=1.000, train_loss_epoch=0.186, train_acc_epoch=0.941]
Epoch 4: 100% 125/125 [04:17<00:00,  2.06s/it, loss=0.083, v_num=8, train_loss_step=0.0846, train_acc_step=1.000, train_loss_epoch=0.186, train_acc_epoch=0.941]